{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shoaib\\\\Desktop\\\\MERN Tutorial\\\\client\\\\src\\\\components\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  /*\r\n    static propTypes = {\r\n      getItems: PropTypes.func.isRequired,\r\n      item: PropTypes.object.isRequired,\r\n      isAuthenticated: PropTypes.bool\r\n    };\r\n  */\n  componentDidMount() {\n    this.props.getItems();\n  }\n  /*\r\n    onDeleteClick = id => {\r\n      this.props.deleteItem(id);\r\n    };\r\n  */\n\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const name = prompt('Enter Item');\n\n        if (name) {\n          this.setState(state => ({\n            items: [...state.items, {\n              id,\n              name\n            }]\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add Item\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, items.map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id !== id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\xD7\"), name))))));\n  }\n\n}\n/*\r\nrender() {\r\nconst {items} = this.props.item;\r\n        return (\r\n<Container>\r\n            <ListGroup>\r\n                <TransitionGroup className='shopping-list'>\r\n                    {items.map(({ _id, name }) => (\r\n                        <CSSTransition key={_id} timeout={500} classNames='fade'>\r\n                            <ListGroupItem>\r\n                                {this.props.isAuthenticated ? (\r\n                                    <Button\r\n                                        className='remove-btn'\r\n                                        color='danger'\r\n                                        size='sm'\r\n                                        onClick={this.onDeleteClick.bind(this, _id)}\r\n                                    >\r\n                                        &times;\r\n            </Button>\r\n                                ) : null}\r\n                                {name}\r\n                            </ListGroupItem>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </ListGroup>\r\n        </Container>\r\n        );\r\n      }\r\n    }\r\n*/\n\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ShoppingList);","map":{"version":3,"sources":["C:\\Users\\Shoaib\\Desktop\\MERN Tutorial\\client\\src\\components\\ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","connect","getItems","PropTypes","ShoppingList","componentDidMount","props","render","items","item","marginBottom","name","prompt","setState","state","id","map","filter","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AACjC;;;;;;;AAQAW,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,QAAX;AACH;AAED;;;;;;;AAMAK,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKF,KAAL,CAAWG,IADxB,CACGD,KADH;AAEL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAFX;AAGI,MAAA,OAAO,EAAE,MAAM;AACX,cAAMC,IAAI,GAAGC,MAAM,CAAC,YAAD,CAAnB;;AACA,YAAID,IAAJ,EAAU;AACN,eAAKE,QAAL,CAAcC,KAAK,KAAK;AACpBN,YAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiB;AAAEO,cAAAA,EAAF;AAAMJ,cAAAA;AAAN,aAAjB;AADa,WAAL,CAAnB;AAGH;AACJ,OAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACQ,GAAN,CAAU,CAAC;AAAED,MAAAA,EAAF;AAAMJ,MAAAA;AAAN,KAAD,KACP,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEI,EAApB;AAAwB,MAAA,OAAO,EAAE,GAAjC;AAAsC,MAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,OAAO,EAAE,MAAM;AACX,aAAKF,QAAL,CAAcC,KAAK,KAAK;AACpBN,UAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAAvC;AADa,SAAL,CAAnB;AAGH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAWKJ,IAXL,CADJ,CADH,CADL,CADJ,CAhBJ,CADJ;AAyCH;;AA9DgC;AAiErC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCAP,YAAY,CAACc,SAAb,GAAyB;AACrBhB,EAAAA,QAAQ,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UADJ;AAErBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAFF,CAAzB;;AAKA,MAAME,eAAe,GAAIR,KAAD,KAAY;AAChCL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADoB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAClBqB,eADkB,EAElB;AAAEpB,EAAAA;AAAF,CAFkB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ShoppingList extends Component {\r\n    /*\r\n      static propTypes = {\r\n        getItems: PropTypes.func.isRequired,\r\n        item: PropTypes.object.isRequired,\r\n        isAuthenticated: PropTypes.bool\r\n      };\r\n    */\r\n\r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    /*\r\n      onDeleteClick = id => {\r\n        this.props.deleteItem(id);\r\n      };\r\n    */\r\n\r\n    render() {\r\n        const { items } = this.props.item;\r\n        return (\r\n            <Container>\r\n                <button\r\n                    color='dark'\r\n                    style={{ marginBottom: '2rem' }}\r\n                    onClick={() => {\r\n                        const name = prompt('Enter Item');\r\n                        if (name) {\r\n                            this.setState(state => ({\r\n                                items: [...state.items, { id, name }]\r\n                            }));\r\n                        }\r\n                    }}\r\n                >\r\n                    Add Item\r\n                </button>\r\n\r\n                <ListGroup>\r\n                    <TransitionGroup className='shopping-list'>\r\n                        {items.map(({ id, name }) => (\r\n                            <CSSTransition key={id} timeout={500} classNames='fade'>\r\n                                <ListGroupItem>\r\n                                    <Button\r\n                                        className='remove-btn'\r\n                                        color='danger'\r\n                                        size='sm'\r\n                                        onClick={() => {\r\n                                            this.setState(state => ({\r\n                                                items: state.items.filter(item => item.id !== id)\r\n                                            }));\r\n                                        }}\r\n                                    >&times;</Button>\r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n\r\n                </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nrender() {\r\nconst {items} = this.props.item;\r\n        return (\r\n<Container>\r\n            <ListGroup>\r\n                <TransitionGroup className='shopping-list'>\r\n                    {items.map(({ _id, name }) => (\r\n                        <CSSTransition key={_id} timeout={500} classNames='fade'>\r\n                            <ListGroupItem>\r\n                                {this.props.isAuthenticated ? (\r\n                                    <Button\r\n                                        className='remove-btn'\r\n                                        color='danger'\r\n                                        size='sm'\r\n                                        onClick={this.onDeleteClick.bind(this, _id)}\r\n                                    >\r\n                                        &times;\r\n            </Button>\r\n                                ) : null}\r\n                                {name}\r\n                            </ListGroupItem>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </ListGroup>\r\n        </Container>\r\n        );\r\n      }\r\n    }\r\n*/\r\n\r\nShoppingList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getItems }\r\n)(ShoppingList);\r\n"]},"metadata":{},"sourceType":"module"}